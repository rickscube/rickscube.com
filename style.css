html, body {
    height: 100%;
    overflow: hidden;
    
}
.controls {
    position: fixed;
    bottom: 0;
    right: 0;
}

button[data-setter] {
    outline: none;
    background: transparent;
    border: none;
    font-family: 'Roboto';
    font-weight: 300;
    font-size: 18px;
    width: 25px;
    height: 30px;
    color: #F7958E;
    cursor: pointer;
}

    button[data-setter]:hover {
        opacity: 0.5;
    }

.setters {
    position: absolute;
    left: 85px;
    top: 75px;
}

.minutes-set {
    float: left;
    margin-right: 28px;
}

.seconds-set {
    float: right;
}

.controlls {
    position: absolute;
    left: 75px;
    top: 105px;
    text-align: center;
}

.display-remain-time {
    font-family: 'Roboto';
    font-weight: 100;
    font-size: 65px;
    color: #F7958E;
}

#pause {
    outline: none;
    background: transparent;
    border: none;
    margin-top: 10px;
    width: 50px;
    height: 50px;
    position: relative;
}

.play::before {
    display: block;
    content: "";
    position: absolute;
    top: 8px;
    left: 16px;
    border-top: 15px solid transparent;
    border-bottom: 15px solid transparent;
    border-left: 22px solid #F7958E;
}

.pause::after {
    content: "";
    position: absolute;
    top: 8px;
    left: 12px;
    width: 15px;
    height: 30px;
    background-color: transparent;
    border-radius: 1px;
    border: 5px solid #F7958E;
    border-top: none;
    border-bottom: none;
}

#pause:hover {
    opacity: 0.8;
}

.e-c-base {
    fill: none;
    stroke: #B6B6B6;
    stroke-width: 4px
}

.e-c-progress {
    fill: none;
    stroke: #F7958E;
    stroke-width: 4px;
    transition: stroke-dashoffset 0.7s;
}

.e-c-pointer {
    fill: #FFF;
    stroke: #F7958E;
    stroke-width: 2px;
}

#e-pointer {
    transition: transform 0.7s;
}

.centered, .cube > .piece > .element > .sticker {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
}

.scene {
    width: 100%;
    height: 100%;
    perspective: 1200px;
    transform-style: preserve-3d;
}

    .scene > .pivot {
        width: 0;
        height: 0;
        transition: .18s;
    }

    .scene .anchor {
        width: 2em;
        height: 6em;
    }

    .scene div {
        position: absolute;
        transform-style: inherit;
    }



.cube {
    font-size: 190%;
    margin-left: -1em;
    margin-top: -1em;
}

    .cube > .piece {
        width: 1.9em;
        height: 1.9em;
    }

        .cube > .piece > .element {
            width: 100%;
            height: 100%;
            background: #0A0A0A;
            outline: 1px solid transparent;
            border: 0.05em solid #0A0A0A;
            border-radius: 10%;
        }

            .cube > .piece > .element.left {
                transform: rotateX(0deg) rotateY(-90deg) rotateZ(180deg) translateZ(1em);
            }

            .cube > .piece > .element.right {
                transform: rotateX(0deg) rotateY(90deg) rotateZ(90deg) translateZ(1em);
            }

            .cube > .piece > .element.back {
                transform: rotateX(0deg) rotateY(180deg) rotateZ(-90deg) translateZ(1em);
            }

            .cube > .piece > .element.front {
                transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg) translateZ(1em);
            }

            .cube > .piece > .element.bottom {
                transform: rotateX(-90deg) rotateY(0deg) rotateZ(-90deg) translateZ(1em);
            }

            .cube > .piece > .element.top {
                transform: rotateX(90deg) rotateY(0deg) rotateZ(180deg) translateZ(1em);
            }

            .cube > .piece > .element > .sticker {
                transform: translateZ(2px);
                width: 95%;
                height: 95%;
                border-radius: 10%;
                outline: 1px solid transparent;
                box-shadow: inset 0.05em 0.05em 0.2rem 0 rgba(255, 255, 255, 0.25), inset -0.05em -0.05em 0.2rem 0 rgba(0, 0, 0, 0.25);
            }

                .cube > .piece > .element > .sticker.blue {
                    background-color: #001ca8;
                }

                .cube > .piece > .element > .sticker.green {
                    background-color: #006E16;
                }

                .cube > .piece > .element > .sticker.white {
                    background-color: #DDD;
                }

                .cube > .piece > .element > .sticker.yellow {
                    background-color: #E0AE00;
                }

                .cube > .piece > .element > .sticker.orange {
                    background-color: #FF5000;
                }

                .cube > .piece > .element > .sticker.red {
                    background-color: #DF0500;
                }
